#!/bin/bash
set -o errexit
BINDISTS=${BINDISTS:-artful}

. common.sh

rm -rf build
mkdir -p build

SOURCE=$(ls -1 sources/hitch-*.tar.gz 2>/dev/null)
findversion "$SOURCE"

tar xf "${SOURCE}" -C build

cd build/hitch-*
cp -r ../../debian .
rm -f debian/.*.sw?    # Delete any vim temporary files.

ln "../../$SOURCE" "../hitch_$V.$MINOR.orig.tar.gz"

FULL_VERSION="$V.$MINOR-0${RELEASE}+daily+$(date +%Y%m%d.%H%M%S)"
export DEBEMAIL="Lasse Karstensen <lasse.karstensen@gmail.com>"
dch -D artful -v "$V.$MINOR-0${RELEASE}+daily+$(date +%Y%m%d.%H%M%S)" "Automatic build from git"
head debian/changelog

# Generate the source package used by subsequent sbuilds
dpkg-buildpackage -S -j10 \
       --sign-key=25C0AEC3D0D2AB90C20F1EB1E39FF2B43D24CCDD

# Work dir is build/
cd ..
# By now we are done setting up and building the source package.

if [ "$1x" = "binaryx" ]; then
	# Build binary packages for the requested releases inside chroots.
	for dist in $BINDISTS; do
		# Legacy packages embedded the release into the package version.
		export DEBIAN_OVERRIDE_BINARY_VERSION="$FULL_VERSION~$dist"
		sbuild -v -A -c "$dist-amd64$chroot_postfix" -d "$dist" hitch_*.dsc
	done
else
	echo "Not building binary package"
	exit 0
fi
